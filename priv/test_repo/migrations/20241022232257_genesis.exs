defmodule SonetLib.TestRepo.Migrations.Genesis do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:store, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :open_time, :time, null: false
      add :close_time, :time, null: false
    end

    create table(:product, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :is_adult_only, :boolean, null: false

      add :store_id,
          references(:store,
            column: :id,
            name: "product_store_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:inventory, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :count, :bigint, null: false

      add :store_id,
          references(:store,
            column: :id,
            name: "inventory_store_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :product_id,
          references(:product,
            column: :id,
            name: "inventory_product_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:customer, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :age, :bigint, null: false
    end
  end

  def down do
    drop table(:customer)

    drop constraint(:inventory, "inventory_store_id_fkey")

    drop constraint(:inventory, "inventory_product_id_fkey")

    drop table(:inventory)

    drop constraint(:product, "product_store_id_fkey")

    drop table(:product)

    drop table(:store)
  end
end
